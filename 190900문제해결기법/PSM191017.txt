#(4-2)13번

public class Test {
	public static void main(String[] args) {
		String s="대한민국의 수도는 서울이다.";
		char stack[]=new char[s.length()];
		int top=-1;
		for(int i=0;i<s.length();i++) {
			stack[++top]=s.charAt(i);
		}
//		System.out.println(stack);
		for(int i=0;i<s.length();i++) {
//			System.out.print(stack[top]);
			System.out.print(stack[top--]);
		}
	}

}

#(4-2)14번
import java.util.Arrays;

public class SimpleStack {
	int stack[];
	int top = -1;

	public SimpleStack(int size) {
		stack = new int[size];
	}

	public void push(int data) {
		stack[++top] = data;
	}

	public int pop() {
		return stack[top--];
	}

	public boolean isEmpty() {
		return top == -1;
	}

	public boolean isFull() {
		return top != 1;
	}

	public int peek() {
		return stack[top];
	}

	@Override
	public String toString() {
		return "top=" + top + ", stack=" + Arrays.toString(stack);
	}
}

public class Test {
	public static void main(String[] args) {
		SimpleStack stack = new SimpleStack(10); // 크기 10의 Stack 생성

		// 스택에 5 9 1 순차 삽입
		stack.push(5);
		stack.push(9);
		stack.push(1);

		System.out.println(stack); // 스택 출력

		int data = stack.pop(); // 스택에서 자료 추출
		System.out.println("Data deleted from stack:" + data);

		System.out.println(stack); // 스택 출력
	}
}

#(4-2)4번
import java.util.LinkedList;

public class Test {
	public static void main(String[] args) {
		String s = "대한민국의 수도는 서울이다.";
		LinkedList<Character> stack = new LinkedList<>();
		for(int i=0;i<s.length();i++) stack.addLast(s.charAt(i)); //라스트-같은위치에서 삽입
		while(stack.isEmpty()) System.out.println(stack.removeLast()); //라스트-같은위치에서 삭제
	}
}

#(4-2)괄호쌍매칭
public class Test {
	public static void main(String[] args) {
		String s = "(1+3*(4+5))/(6*(7+8))";
		System.out.println(checkParen(s));
	}

	private static boolean checkParen(String s) {
		Stack<Character> stack = new Stack<>();
		for (Character c : s.toCharArray()) {
			if(c=='(') stack.push(c);
			else if(c==')') {
				if(stack.isEmpty()) return false;
				else stack.pop;//괄호종류가 하나라서 무조건 남은게')'이니까 팝팝
			}
		}
//		if(stack.isEmpty()) return true;
//		else return false;
		return stack.isEmpty();

	}
}

#(4-2)괄호 종류 여러개
귀차냥 자료실 참고하자

#(4-2)후위표현식 10

double n2=stack.pop(), n1=stack.pop(); //n2먼저 팝팝

else stack.push(Double.parseDouble(token)) //숫자면 문자를 숫자로 바꿔서 스택에 넣는다

if("+-*/".contains(token)) {
				double n2=stack.pop(), n1=stack.pop(); //n2먼저 팝팝
				if(token.contentEquals("+")) stack.push(n1+n2);
				if(token.contentEquals("")) stack.push(n1+n2);
				if(token.contentEquals("")) stack.push(n1+n2);
				if(token.contentEquals("")) stack.push(n1+n2);
				
			}
			else //나머지 하나가 계산값


#
