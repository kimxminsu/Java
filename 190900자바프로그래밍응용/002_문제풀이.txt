002_실습 문제풀이

클래스 객체 기초 실습 A
public class Student {
	String	id;
	char	gender;
}
public class Test {
	public static void main(String[] args) {
		Student	s=new Student();
		s.id="S001";
		s.gender='여';
		System.out.println(s.id);
		System.out.println(s.gender);
	}
}

클래스 객체 기초 실습 D
public class Student {
	String	id;
	char	gender;
	public Student(String id, char gender) {
		this.id=id;
		this.gender=gender;
	}
	@Override
	public String toString() {
		return "아이디:"+id+", 성별:"+gender;
	}
}
public class Test {
	public static void main(String[] args) {
		Student	s=new Student("S001", '여');
		System.out.println(s);
	}
}

클래스 객체 기초 실습 G
public class DateYMD {
	int	year;
	int	month;
	int	day;
}
public class Member {
	String	id;
	DateYMD	date;
	public Member(String id, int year, int month, int day) {
		this.id=id;
		this.date=new DateYMD();
		this.date.year=year;
		this.date.month=month;
		this.date.day=day;
	}
	@Override
	public String toString() {
		return "회원아이디: "+id+", 가입일: "+date.year+"년 "+date.month+"월 "+date.day+"일";
	}
}
public class Test {
	public static void main(String[] args) {
		Member	m1=new Member("M001", 2019, 3, 5);
		System.out.println(m1);
		System.out.println(m1.date.month);
	}
}

클래스 작성 static 실습 A
public class Calc {
	public static double PI = 3.14159;
	public static int max(int n, int m) {
		if(n>m) return n;
		else return m;
	}
	public static double areaOfCircle(double radius) {
		return PI*radius*radius;
	}
}

클래스 작성 static 실습 B
public class Soldier {
	static int	count;
	public Soldier() {
		count++;
	}
	public static int getCount() {
		return count;
	}
	public static void decreaseCount() {
		count--;
	}
}

클래스 작성 static 실습 C
public class Soldier {
	String	id;
	static int	no;
	public Soldier() {
		no++;
		this.id="Soldier-"+no;
	}
	@Override
	public String toString() {
		return id;
	}
}


클래스 작성 static 실습 D
public class Calc {
	public static int sum(int n, int m) {
		return n+m;
	}
	public static double sum(double n, double m) {
		return n+m;
	}
	public static int sum(int[] n) {
		int	sum=0;
		for (int i = 0; i < n.length; i++) {
			sum+=n[i];
		}
		return sum;
	}
	public static int sum(String[] s) {
		int	sum=0;
		for (int i = 0; i < s.length; i++) {
			sum+=Integer.parseInt(s[i]);
		}
		return sum;
	}
}

클래스 작성 private 실습 A
public class User {
	private String	email;
	private String	startDate;
	public User(String email, String startDate) {
		this.email=email;
		this.startDate=startDate;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getStartDate() {
		return startDate;
	}
}
public class Test {
	public static void main(String[] args) {
		User	u=new User("yhkim@ks.ac.kr", "20190214");
		System.out.println(u.getEmail());
		System.out.println(u.getStartDate());
	}
}

인터페이스 실습 C
public interface ShapeAction {
	double getArea();
}
public class Rectangle implements ShapeAction {
	int	width;
	int	height;
	public Rectangle(int width, int height) {
		this.width=width;
		this.height=height;
	}
	@Override
	public double getArea() {
		return width*height;
	}
}
public class Circle implements ShapeAction {
	int	radius;
	public Circle(int radius) {
		this.radius=radius;
	}
	@Override
	public double getArea() {
		return 3.14*radius*radius;
	}
}
public class Test {
	public static void main(String[] args) {
		Rectangle	r1=new Rectangle(3,4);
		Circle	c1=new Circle(5);
		Circle	c2=new Circle(2);
		ShapeAction	v[]= {r1, c1, c2};
		for (int i = 0; i < v.length; i++) {
			System.out.println(v[i].getArea());
		}
	}
}