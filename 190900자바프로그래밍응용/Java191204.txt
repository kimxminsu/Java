CoulselSearch-searchMemo() 안에
	try {
			Class.forName("org.sqlite.JDBC"); // JDBC 대문자로 입력
			Connection DB = DriverManager.getConnection("jdbc:sqlite:C:/Temp/DB_Univ.db"); // C:/Temp/DB_Univ.db 파일이
																							// 생성되어 있어야 함
			Statement sql = DB.createStatement();
			ResultSet cursor = sql.executeQuery("select * from TB_memo");
			while (cursor.next()) {
//				String v=cursor.getString(1)+"\t"+cursor.getString(2)+"\t"+cursor.getString(3)+"\t"+cursor.getString(4)+"\t"+cursor.getString(5)+"\t"+cursor.getString(6);
				String v= {cursor.getString(1),cursor.getString(1),cursor.getString(2),cursor.getString(3),cursor.getString(4),cursor.getString(5),cursor.getString(6)};
				System.out.println(cursor.getString(1) + "\t" + cursor.getString(2) + "\t" + cursor.getString(3));
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}



protected void searchMemo() {
		String fieldName[]= {"date","name","address","gender","foreigner","memo"};
		int queryFieldIndex = comboBox_queryField.getSelectedIndex();
		String s=fieldName[queryFieldIndex];//if 3=gender 0=date
		String query = textField_query.getText();
		DefaultTableModel model = (DefaultTableModel) table.getModel();
		model.setRowCount(0);
		try {
			Class.forName("org.sqlite.JDBC"); // JDBC 대문자로 입력
			Connection DB = DriverManager.ge`tConnection("jdbc:sqlite:C:/Temp/DB_Univ.db"); // C:/Temp/DB_Univ.db 파일이
																							// 생성되어 있어야 함
			Statement sql = DB.createStatement();
			ResultSet cursor = sql.executeQuery("select * from TB_memo");
			while (cursor.next()) {
//				String v=cursor.getString(1)+"\t"+cursor.getString(2)+"\t"+cursor.getString(3)+"\t"+cursor.getString(4)+"\t"+cursor.getString(5)+"\t"+cursor.getString(6);
				String v={cursor.getString(1),cursor.getString(1),cursor.getString(2),cursor.getString(3),cursor.getString(4),cursor.getString(5),cursor.getString(6)};
				System.out.println(cursor.getString(1) + "\t" + cursor.getString(2) + "\t" + cursor.getString(3));
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}

CounselMain extends JFrame 안에
Connection DB;

CounselMain() 안에
try {
			Class.forName("org.sqlite.JDBC");
			Connection DB = DriverManager.getConnection("jdbc:sqlite:C:/Temp/DB_Univ.db");
		} catch (Exception e1) {
			e1.printStackTrace();
		}


JAR
run JAR 
비교한거 WindowBuilder-CounselHelper 자료 업데이트해뒀음


1차로 내가한거
public class CounselMain extends JFrame {
	CounselInput	counselInput=new CounselInput();
	CounselSearch	counselSearch=new CounselSearch(this);//
	static Connection DB;//
	public CounselMain() {
		try {
			Class.forName("org.sqlite.JDBC");
			DB = DriverManager.getConnection("jdbc:sqlite:C:/Temp/DB_Univ.db");
		} catch (Exception e1) {
			e1.printStackTrace();
		}
	setSize...

#CounselSearch
	private Connection DB;//

	public CounselSearch(CounselMain counselMain) {//
		JPanel...

	....


	protected void searchMemo() {
		String fieldName[]= {"date","name","address","gender","foreigner","memo"};
		int queryFieldIndex = comboBox_queryField.getSelectedIndex();
		String s=fieldName[queryFieldIndex];//if 3=gender 0=date
		String query = textField_query.getText();
		DefaultTableModel model = (DefaultTableModel) table.getModel();
		model.setRowCount(0);
		try {
//			Class.forName("org.sqlite.JDBC"); // JDBC 대문자로 입력
//			Connection DB = DriverManager.getConnection("jdbc:sqlite:C:/Temp/DB_memo.db"); // C:/Temp/DB_Univ.db 파일이 생성되어 있어야 함
			Statement sql = CounselMain.DB.createStatement();
			ResultSet cursor = sql.executeQuery("select * from TB_memo where"+fieldName[comboBox_queryField.getSelectedIndex()]+"like '%"+query+"%'");
			while (cursor.next()) {
//				String v=cursor.getString(1)+"\t"+cursor.getString(2)+"\t"+cursor.getString(3)+"\t"+cursor.getString(4)+"\t"+cursor.getString(5)+"\t"+cursor.getString(6);
//				String w[]=v.split("\t");
				String v[]={cursor.getString(1),cursor.getString(2),cursor.getString(3),cursor.getString(4),cursor.getString(5),cursor.getString(6)};
				model.addRow(v);
				System.out.println(cursor.getString(1) + "\t" + cursor.getString(2) + "\t" + cursor.getString(3));
			}
			table.setModel(model);
			DB.close();
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}