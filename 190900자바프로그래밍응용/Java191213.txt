한글 EUCkr, UTF-8 혼용돼서 통일성 부족->잘안보임

#서블릿_9페이지 7번 

#아파치톰킷 껐다켰다
제어판-관리 도구-서비스-아파치톰킷-수동 중지, 시작

*그리고 html 파일을 더블클릿하면 주소보면 디스크에 있는파일을 웹브라우저에 표시
웹서버를 통해 서비스된게 아님

*웹서버에 맞게 정리해서 웹서버에 보냄
보내면(submit) 보내는 내용이 주소줄에 보임
Clinton / KT / clinton@kt.org
http://localhost:8080/JPcourse/Guestbook?NAME=Clinton&AFFL=KT&EMAIL=clinton%40kt.org
?다음에
key=value(NAME=clinton)
@=>%40(% + 16진법)

Clinton James/ KT / clinton@kt.org
http://localhost:8080/JPcourse/Guestbook?NAME=Clinton+James&AFFL=KT&EMAIL=clinton%40kt.org
공백=+

*톰킷 실행되면 메모리안에 실행되는 이미지를 갖고있기때문에
수정하면 톰킷 리스타트 해야됨

*JPcourse 들어가면 텍스트파일로 내가 입력한게 보임

#한글
한글 하려면 .html ㅍ파일을
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
이거 추가

톰킷-conf/serv 
<Connector port 부분 찾아서
URIEncoding="UTF-8"
마지막줄에 추가

다시 JPcourse 들어가면 텍스트파일로 내가 입력한게 한글 안깨지고 보임

*이클립스에서 FileWriter UTF8이 아니고 ANSi, CP-949 그래서 따로 UF8해야되니까 번거롭


#그래픽스
게임 프로그램 ㅎ.ㅎ
제이프레임
import java.awt.Graphics;

import javax.swing.JFrame;

public class Test extends JFrame {
	public Test() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setSize(500, 500); //화면 창 (윈도우) 크기
	}

	@Override
	public void paint(Graphics g) { //실제 그림 그려짐, Graphics 객체=스케치북
//		메모리 상에 있는거를 그래픽카드로 보내서 디스플레이에서 실제 보이게함
		super.paint(g);
		g.drawLine(0, 0, 100, 100); // TitleBar를 포함한 JFrame의 원점 기준
//		0,0 -> 100,100 대각선으로 그려짐
//		실제로 실행하면 0,0은 제목?부분에 가려져 ㅠㅠ JFrame 에 그려서 생긴 문제
	}

	public static void main(String[] args) {
		new Test().setVisible(true);
	}
}

#제이패널은 사각형 바가 있음 그래서 대각선 그어도 안끊겨서 보임
import java.awt.Dimension;
import java.awt.Graphics;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class Test extends JPanel {
	public Test() {
		setPreferredSize(new Dimension(500, 500));
	}

	@Override
	protected void paintComponent(Graphics g) { //JFrame 과는 다름
		super.paintComponent(g);
		g.drawLine(0, 0, 100, 100);
		g.drawLine(400, 400, 500, 500);
	}

	public static void main(String[] args) {
		JFrame w = new JFrame();
		w.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		w.add(new Test());
		w.pack(); // JPanel 크기만큼 조정
		w.setVisible(true);
	}
}

#그림
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class Test extends JPanel {
	public Test() {
		setPreferredSize(new Dimension(500, 500)); // 선호 크기
	}

	@Override
	protected void paintComponent(Graphics g1) { // 변수 이름 g1
		super.paintComponent(g1); // 이전 그림을 지운다.
		Graphics2D g = (Graphics2D) g1; // g1을 2D 2차원으로 변환
		g.drawImage(new ImageIcon("./푸른 언덕.jpg").getImage(), 0, 0, getSize().width, getSize().height, this);
		g.drawString("홍길동", 100, 5); // 글자
		g.drawString("홍길동", 100, 20);
		g.setColor(Color.BLUE); // 색
		g.setFont(new Font("맑은고딕", Font.BOLD, 40));
		g.drawString("안녕하세요. 반갑습니다.", 100, 100);
		g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON); // 안티에일리어싱-부드러운 글씨
		g.drawString("안녕하세요. 반갑습니다.", 100, 200);
		g.setColor(Color.red);
		g.fillRect(10, 10, 50, 50); // g.drawRect와 비교해 볼 것 //사각형_10,10위치에 가로50, 세로50
		g.setColor(Color.blue);
		g.fillOval(10, 70, 50, 50); // g.drawOval와 비교해 볼 것 //타원_
		g.setColor(Color.green);
		g.fillRoundRect(10, 130, 50, 50, 20, 20); // g.drawRoundRect와 비교해 볼 것
		g.setColor(Color.magenta);
		g.fillArc(10, 190, 50, 50, 0, 270); // g.drawArc와 비교해 볼 것
		g.setColor(Color.orange);
		g.fillPolygon(new int[] { 30, 10, 30, 60 }, new int[] { 250, 275, 300, 275 }, 4); // g.drawPolygon //
																							// (30,250)->(10,275)->(30,300)->(60,275)->(30,250)
	}

	public static void main(String[] args) {
		JFrame w = new JFrame();
		w.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		w.add(new Test()); // add
		w.pack();
		w.setVisible(true);
	}
}

#5번
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class Test extends JPanel {
	int x, y, width = 100, height = 100;

	public Test() {
		setPreferredSize(new Dimension(500, 500));
//		AnimationLoop(); //스레드 안하고 이거만 하면 애니메이션만 무한루프 돌아서 윈도우에 표시하는 코드가 실행이안됨
//		스레드-하나의 프로그램에서 실행되는게 여러개 쭉 흘러가는거
//		new Thread 하면 하나 더 생겨서 2개가 흘러간다
//		그런데 스레드를 추가로 안쓰면 스레드가 하나라서 흘러가다가 멈춤
//		추가로 만들어야 스레드가 하나 추가돼서 걔 나름대로 혼자 돌아감
//		Thread() start 한다음에 괄호 안에 컨+스 해서 러너블 객체 선택
		new Thread(new Runnable() { //쓰레드 !!! run 메소드 안에서 애니메이션 루프
			@Override
			public void run() {
				AnimationLoop();
			}
		}).start();
	}

	protected void AnimationLoop() {
		while (true) { //무한루프
			AnimationUpdate(); //화면에 표시할 콘텐츠 정보(색,위치,모양) 변경
			repaint(); //다시그림
			try {
				Thread.sleep(1000); //1초 쉰다 , 100일 경우 1/10초
			} catch (InterruptedException e) {
			}
		}
	}

	private void AnimationUpdate() {
		Random random = new Random();
		x = random.nextInt(500);
		y = random.nextInt(500);
	}

	@Override
	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D) g;
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		Random random = new Random();
		g2.setColor(new Color(random.nextInt(256), random.nextInt(256), random.nextInt(256)));
		g2.fillOval(x, y, width, height);
	}

	public static void main(String[] args) {
		JFrame w = new JFrame();
		w.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		w.add(new Test());
		w.pack();
		w.setVisible(true);
	}
}


#바운싱볼1
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class Test extends JPanel {
	int canvasWidth = 500;
	int canvasHeight = 500;
	int dx = 5, dy = 5; // x에서 얼만큼 더해서 위치를 움직일지
	int x, y, diameter = 30;
	Color color;

	public Test() {
		setPreferredSize(new Dimension(canvasWidth, canvasHeight));
		x = (canvasWidth - diameter) / 2; // 초기위치,
		y = canvasHeight - diameter;
		Random random = new Random();
		color = new Color(random.nextInt(256), random.nextInt(256), random.nextInt(256));
		new Thread(new Runnable() {
			@Override
			public void run() {
				GameLoop();
			}
		}).start();
	}

	protected void GameLoop() {
		while (true) {
			GameUpdate();
			repaint();
			try {
				Thread.sleep(20);
			} catch (InterruptedException e) {
			}
		}
	}

	protected void GameUpdate() {
		if (x < 0 || x + diameter > canvasWidth) // 오른쪽 끝이 벽을 넘어서면 //x<0 : 왼쪽 벽에 부딪히면
			dx *= -1; // 왼쪽으로 5만큼 //오른쪽으로 5만큼
		if (y < 0 || y + diameter > canvasHeight) // 위쪽 벽에 부딪히면
			dy *= -1; // 아래로 5만큼
		x += dx; // 오른쪽으로 5만큼
		y -= dy; // 위로 5만큼
	}

	@Override
	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D) g;
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		g2.setColor(color);
		g2.fillOval(x, y, diameter, diameter);
	}

	public static void main(String[] args) {
		JFrame w = new JFrame();
		w.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		w.add(new Test());
		w.pack();
		w.setVisible(true);
	}
}




#바운싱볼2
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class Test extends JPanel implements KeyListener {
	boolean startFlag;
	int canvasWidth = 500;
	int canvasHeight = 500;
	int dx = 5, dy = 5;
	int x, y, diameter = 30;
	Color color;

	public Test() {
		setPreferredSize(new Dimension(canvasWidth, canvasHeight));
		x = (canvasWidth - diameter) / 2;
		y = canvasHeight - diameter;
		Random random = new Random();
		addKeyListener(this);
		setFocusable(true);
		color = new Color(random.nextInt(256), random.nextInt(256), random.nextInt(256));
		new Thread(new Runnable() {
			@Override
			public void run() {
				GameLoop();
			}
		}).start();
	}

	protected void GameLoop() {
		while (true) {
			if (startFlag)
				GameUpdate();
			repaint();
			try {
				Thread.sleep(20);
			} catch (InterruptedException e) {
			}
		}
	}

	protected void GameUpdate() {
		if (x < 0 || x + diameter > canvasWidth)
			dx *= -1;
		if (y < 0 || y + diameter > canvasHeight)
			dy *= -1;
		x += dx;
		y -= dy;
	}

	@Override
	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D) g;
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		g2.setColor(color);
		g2.fillOval(x, y, diameter, diameter);
	}

	public static void main(String[] args) {
		JFrame w = new JFrame();
		w.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		w.add(new Test());
		w.pack();
		w.setVisible(true);
	}

	@Override
	public void keyPressed(KeyEvent e) {
		if (!startFlag && e.getKeyCode() == KeyEvent.VK_RIGHT) // 이걸 없애면 공이 움직이는 중에도 동작
			x += dx;
		if (!startFlag && e.getKeyCode() == KeyEvent.VK_LEFT)
			x -= dx;
		if (e.getKeyCode() == KeyEvent.VK_SPACE)
			startFlag = true;
	}

	@Override
	public void keyReleased(KeyEvent e) {
	}

	@Override
	public void keyTyped(KeyEvent e) {
	}
}


#GUI-데이터베이스연동-file-webprogram

GUI 위주, 상담도우미 코드 counselHelper 예시코드 하나하나 분류해서 짧게 돼있는거

중간_익명내부클래스

서블릿 html 안중요ㅏ 자바에서 코드 작성하는 부분

파일 입출력 한정도만 다룸

