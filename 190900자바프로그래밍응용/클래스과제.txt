A번
public class Student {
	String id;
	char gender;
}

public class Test {
	public static void main(String[] args) {
		Student student;// Student student=new Student(); //두줄합치면 이렇게 한줄로 가능
		student = new Student();
		student.id = "S001";
		student.gender = '여';
		System.out.println(student.id + ", " + student.gender);
	}
}

B번
public class Player {
	String id;
	String name;
	char gender;
	int age;
}

public class Test {
	public static void main(String[] args) {
		Player p1 = new Player();
		Player p2 = new Player();
		p1.id = "P001";
		p1.name = "김영희";
		p1.gender = '여';
		p1.age = 20;
		p2.id = "P002";
		p2.name = "박철수";
		p2.gender = '남';
		p2.age = 20;

		p2.age = 21;// p2 객체의 age를 21로 변경
		System.out.println(p1.id + ", " + p1.name + ", " + p1.gender + ", " + p1.age);
		System.out.println(p2.id + ", " + p2.name + ", " + p2.gender + ", " + p2.age);
		Player v[] = new Player[2];// 배열에 p1,p2 넣기 (2-1)10페이지 참고
		v[0] = p1;
		v[1] = p2;
		System.out.println(v[0].id + ", " + v[0].name + ", " + v[1].id + ", " + v[1].name);
	}
}

C번
public class Member {
	String id;
	int year;
	int month;
	int day;
}

public class Test {
	public static void main(String[] args) {
		Member m1 = new Member();
		Member m2 = new Member();
		Member m3 = new Member();
		m1.id = "M001";
		m1.year = 2019;
		m1.month = 3;
		m1.day = 5;
		m2.id = "M002";
		m2.year = 2017;
		m2.month = 12;
		m2.day = 31;
		m3.id = "M003";
		m3.year = 2000;
		m3.month = 1;
		m3.day = 1;

		Member v[] = new Member[3];
		v[0] = m1;
		v[1] = m2;
		v[2] = m3;

		for (int i = 0; i < v.length; i++) {
			System.out.println(v[i].id);
			System.out.println(v[i].year);
			System.out.println(v[i].month);
		}
	}
}

D번
public class Student {
	String id;
	char gender;

	public Student(String _id, char _gender) {
		id = _id;
		gender = _gender;
	}
}

public class Test {
	public static void main(String[] args) {
		Student student = new Student("S001", '여');
		System.out.println();
		System.out.println(student.toString());
	}
}

E번

public class Player {
	String id, name;
	char gender;
	int age;

	public Player(String id, String name, char gender, int age) {
		this.id = id;
		this.name = name;
		this.gender = gender;
		this.age = age;
	}

	public String toString() {
		return "아이디:" + id + ",이름:" + name + ",성별:" + gender + ",나이:" + age;
	}
}

public class Test {
	public static void main(String[] args) {
		Player p1 = new Player("P001", "김영희", '여', 20);
		Player p2 = new Player("P002", "박철수", '남', 20);
		Player[] v = { p1, p2 };
		for (int i = 0; i < v.length; i++) {
			System.out.println(v[i]);
		}
	}
}

F번

public class Member {
	String id;
	int year, month, day;

	public Member(String id, int year, int month, int day) {
		this.id = id;
		this.year = year;
		this.month = month;
		this.day = day;
	}

	public String toString() {
		return "아이디:" + id + ",가입일:" + year + "년 " + month + "월 " + day + "일";
	}

}

public class Test {
	public static void main(String[] args) {
		Member m1 = new Member("M001", 2019, 3, 5);
		Member m2 = new Member("M002", 2017, 12, 31);
		Member m3 = new Member("M003", 2000, 1, 1);
		Member[] v = { m1, m2, m3 };
		for (int i = 0; i < v.length; i++) {
			System.out.println(v[i]);
		}
	}
}

G번
public class DateYMD {
	int year, month, day;
}

public class Member {
	String id;
	DateYMD date = new DateYMD();// =new~이거 여기서 써도 필드 생성됨

	public Member(String id, int year, int month, int day) {
		this.id = id;
//		this.date=new DateYMD();//year,mon...필드 생성ㅇ
		this.date.year = year;
		this.date.month = month;
		this.date.day = day;
	}

	public String toString() {
		return "회원아이디:" + id + ", 가입일:" + this.date.year + "년 " + this.date.month + "월 " + this.date.day + "일";
	}
}

public class Test {
	public static void main(String[] args) {
		Member m1 = new Member("M001", 2019, 3, 5);
		System.out.println(m1.toString());
	}
}

H번
public class Applicant {
	int seqNo;
	EvaluationResult evalResult;

	public Applicant(int seqNo, int scoreOfTestA, char grade) {
		this.seqNo = seqNo;
		this.evalResult = new EvaluationResult();// 괄호(파라미터)안에 생성자 내에서 필드에 대입해도 되는데 교수님이 개념적 이해 도우려고 기본생성자 사용해서 객체 만들어서
													// 필드 초기화 유도한 방식
		this.evalResult.scoreOfTestA = scoreOfTestA;
		this.evalResult.gradeOfTestB = gradeOfTestB;
	}
}

public class EvaluationResult {
	int scoreOfTestA;
	char gradeOfTestB;
}

public class Test {
	public static void main(String[] args) {
		Applicant a1 = new Applicant(1, 98, 'C'); // 빨간줄뜨면 ctrl+space 2번째거
	}
}

I번
public class Player {
	String id;
	int record1;
	int record2;
	int record3;

	public Player(String id, int record1, int record2, int record3) {
		this.id = id;
		this.record1 = record1;
		this.record2 = record2;
		this.record3 = record3;
	}

	public int getBestRecord() {
		int max = 0;
		if (record1 > record2)
			max = record1;
		else {
			if (record2 > record3)
				max = record2;
			else
				max = record3;
		}
		return max;
	}

	public int getAverageRecord() {
		return (record1 + record2 + record3) / 3;
	}
}

public class Test {
	public static void main(String[] args) {
		Player p1 = new Player("P001", 190, 195, 193);
		Player p2 = new Player("P002", 205, 190, 190);
		System.out.println(p1.getBestRecord());
		System.out.println(p2.getAverageRecord());
	}
}

J번
public class Player {
	String id;
	PlayerRecord record;

	public Player(String id, int record1, int record2, int record3) {
		this.id = id;
		record = new PlayerRecord();
		record.record1 = record1;
		record.record2 = record2;
		record.record3 = record3;
	}

}

public class PlayerRecord {
	int record1;
	int record2;
	int record3;

	public int getBestRecord() {
		int max = 0;
		if (record1 > record2)
			max = record1;
		else {
			if (record2 > record3)
				max = record2;
			else
				max = record3;
		}
		return max;
	}
}

public class Test {
	public static void main(String[] args) {
		Player p1 = new Player("P001", 190, 195, 193);
		Player p2 = new Player("P002", 205, 190, 190);
		System.out.println("최고기록:" + p1.record.getBestRecord());
		Player[] v = new Player[2];
		v[0] = p1;
		v[1] = p2;
		for (int i = 0; i < v.length; i++) {
			System.out.println("id=" + v[i].id + ", 최고기록=" + v[i].record.getBestRecord());
		}
	}
}